parameters:
- name: name
  type: string
- name: jsEngine
  type: string

jobs:
- job: ${{parameters.name}}
  timeoutInMinutes: 30

  pool:
    vmImage: macos-latest

  steps:
  - script: |
      echo Install Android image
      echo 'y' | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;default;x86_64'
      echo 'y' | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      echo Create AVD
      $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_API_27 -d pixel -k 'system-images;android-27;default;x86_64'
    displayName: 'Install Android Emulator'

  - script: |
      echo Start emulator
      nohup $ANDROID_HOME/emulator/emulator -avd Pixel_API_27 -gpu host -no-window 2>&1 &
      echo Wait for emulator
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do echo '.'; sleep 1; done'
      $ANDROID_HOME/platform-tools/adb devices
    displayName: 'Start Android Emulator'

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'Tests/UnitTests/Android/gradlew'
      workingDirectory: 'Tests/UnitTests/Android'
      options: '-PabiFilters=x86_64 -PjsEngine=${{parameters.jsEngine}} -PndkVersion=$(ndkVersion)'
      tasks: 'connectedAndroidTest'
      jdkVersionOption: 1.11
    displayName: 'Run Connected Android Test'

  - script: |
      export results=$(find ./app/build/outputs/androidTest-results -name "*.txt")
      echo cat "$results"
      cat "$results"
    workingDirectory: 'Tests/UnitTests/Android'
    condition: succeededOrFailed()
    displayName: 'Dump logcat from Test Results'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'Tests/UnitTests/Android/app/build/outputs/androidTest-results/connected'
      artifactName: 'AndroidTestResults_${{parameters.jsEngine}}'
    condition: succeededOrFailed()
    displayName: 'Publish Test Results'
